name: Loki 1.3 Image

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
    paths:
      - 'loki/1.3/**'
      - '.github/workflows/loki-1.3.yml'
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: loki
  IMAGE_VERSION: 1.3-alpine-r${{github.run_number}}
  IMAGE_REGISTRY: docker.pkg.github.com/techniumlabs
  IMAGE_REPOSITORY: containers

jobs:

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: docker build --file loki/1.3/Dockerfile
            --label "org.opencontainers.image.source=https://github.com/techniumlabs/containers/loki/1.3"
            --label "org.opencontainers.image.revision=${{github.sha}}"
            --label "org.opencontainers.image.vendor=techniumlabs"
            --build-arg IMAGE_REGISTRY=${IMAGE_REGISTRY}
            --build-arg IMAGE_REPOSITORY=${IMAGE_REPOSITORY}
            --build-arg MAINTAINER=${MAINTAINER} --build-arg TIMEZONE=${TIMEZONE} --tag image loki/1.3

        env:
          MAINTAINER: devops@techniumlabs.com
          TIMEZONE: Australia/Sydney

      - name: Install trivy
        run: |
          export VERSION=$(curl --silent "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz
          tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz

      - name: Scan Container
        run: |
          ./trivy --exit-code 0 --severity UNKNOWN,LOW,MEDIUM --no-progress image
          ./trivy --exit-code 1 --severity HIGH,CRITICAL --no-progress image

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          echo IMAGE_ID=$IMAGE_ID
          echo IMAGE_VERSION=$IMAGE_VERSION

          docker tag image $IMAGE_ID:$IMAGE_VERSION
          docker push $IMAGE_ID:$IMAGE_VERSION
